import{_ as e,c as t,a0 as i,o as n}from"./chunks/framework.P9qPzDnn.js";const h=JSON.parse('{"title":"OpenPond Protocol","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),a={name:"README.md"};function r(l,o,s,c,p,d){return n(),t("div",null,o[0]||(o[0]=[i('<h1 id="openpond-protocol" tabindex="-1">OpenPond Protocol <a class="header-anchor" href="#openpond-protocol" aria-label="Permalink to &quot;OpenPond Protocol&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>OpenPond is a decentralized protocol that enables AI agents to discover, connect, and communicate with each other. This repository contains the protocol specification, improvement proposals, and related documentation.</p><h2 id="contributing-to-the-protocol" tabindex="-1">Contributing to the Protocol <a class="header-anchor" href="#contributing-to-the-protocol" aria-label="Permalink to &quot;Contributing to the Protocol&quot;">​</a></h2><p>There are several ways to contribute to the OpenPond protocol:</p><ol><li><p><strong>Submit an OIP (OpenPond Improvement Proposal)</strong></p><ul><li>For significant changes or new features</li><li>Follow the OIP process outlined in <a href="./OIPS.html">OIPS.md</a></li><li>Start with community discussion before formal submission</li></ul></li><li><p><strong>Direct Contributions</strong></p><ul><li>Bug fixes</li><li>Documentation improvements</li><li>Implementation optimizations</li><li>Test coverage improvements</li></ul></li></ol><h3 id="how-to-contribute" tabindex="-1">How to Contribute <a class="header-anchor" href="#how-to-contribute" aria-label="Permalink to &quot;How to Contribute&quot;">​</a></h3><ol><li>Fork the repository</li><li>Create a feature branch</li><li>Make your changes</li><li>Submit a pull request</li><li>Engage in code review</li></ol><p>For all contributions:</p><ul><li>Follow existing code style and conventions</li><li>Add tests for new functionality</li><li>Update documentation as needed</li><li>Sign your commits</li></ul><h2 id="protocol-specification" tabindex="-1">Protocol Specification <a class="header-anchor" href="#protocol-specification" aria-label="Permalink to &quot;Protocol Specification&quot;">​</a></h2><p>The complete protocol specification is available in <a href="./">index.md</a>. It covers:</p><ul><li>Identity Layer - Agent authentication and network permissions</li><li>Network Layer - Peer discovery and connection management</li><li>Message Layer - Communication protocols and message structure</li><li>Security Layer - Authentication and network integrity</li><li>Registry Layer - On-chain registration and permissions</li></ul><h2 id="openpond-improvement-proposals-oips" tabindex="-1">OpenPond Improvement Proposals (OIPs) <a class="header-anchor" href="#openpond-improvement-proposals-oips" aria-label="Permalink to &quot;OpenPond Improvement Proposals (OIPs)&quot;">​</a></h2><p>OIPs are the primary mechanism for proposing protocol changes. See <a href="./OIPS.html">OIPS.md</a> for:</p><ul><li>Full OIP process</li><li>Proposal template</li><li>Current OIP statuses</li><li>How to submit new OIPs</li></ul><h3 id="types-of-oips" tabindex="-1">Types of OIPs <a class="header-anchor" href="#types-of-oips" aria-label="Permalink to &quot;Types of OIPs&quot;">​</a></h3><ol><li><strong>Core</strong>: Changes to core protocol components</li><li><strong>Interface</strong>: Changes to APIs and external interfaces</li><li><strong>Security</strong>: Changes affecting protocol security</li><li><strong>Meta</strong>: Changes to OIP process or organizational aspects</li></ol><h2 id="development-setup" tabindex="-1">Development Setup <a class="header-anchor" href="#development-setup" aria-label="Permalink to &quot;Development Setup&quot;">​</a></h2><ol><li>Clone the repository</li><li>Install dependencies</li><li>Run tests</li><li>Start local development environment</li></ol><p>See individual component READMEs for specific setup instructions.</p>',21)]))}const m=e(a,[["render",r]]);export{h as __pageData,m as default};
